ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB250:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** //FreeRTOS
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** #include "task.h"
  29:Core/Src/main.c **** #include "timers.h"
  30:Core/Src/main.c **** #include "queue.h"
  31:Core/Src/main.c **** #include "semphr.h"
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 2


  32:Core/Src/main.c **** #include "event_groups.h"
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** //MEMS
  35:Core/Src/main.c **** #include "sensors.h"
  36:Core/Src/main.c **** /* USER CODE END Includes */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PD */
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  54:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** UART_HandleTypeDef huart5;
  62:Core/Src/main.c **** UART_HandleTypeDef huart1;
  63:Core/Src/main.c **** UART_HandleTypeDef huart3;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE BEGIN PV */
  66:Core/Src/main.c **** uint8_t count = 0;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** TaskHandle_t DefaultTask;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** Sensor_handle_t sensors;
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.c **** void SystemClock_Config(void);
  75:Core/Src/main.c **** static void MX_GPIO_Init(void);
  76:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  77:Core/Src/main.c **** static void MX_DMA_Init(void);
  78:Core/Src/main.c **** static void MX_ADC1_Init(void);
  79:Core/Src/main.c **** static void MX_I2C1_Init(void);
  80:Core/Src/main.c **** static void MX_I2C2_Init(void);
  81:Core/Src/main.c **** static void MX_TIM5_Init(void);
  82:Core/Src/main.c **** static void MX_UART5_Init(void);
  83:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  86:Core/Src/main.c **** #ifdef __GNUC__
  87:Core/Src/main.c **** /* With GCC, small printf (option LD Linker->Libraries->Small printf
  88:Core/Src/main.c ****  set to 'Yes') calls __io_putchar() */
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 3


  89:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  90:Core/Src/main.c **** #else
  91:Core/Src/main.c **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  92:Core/Src/main.c **** #endif /* __GNUC__ */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void Default_task (void *pvParameters);
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END PFP */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  99:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief  The application entry point.
 105:Core/Src/main.c ****   * @retval int
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** int main(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Core/Src/main.c ****   HAL_Init();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Configure the system clock */
 123:Core/Src/main.c ****   SystemClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Initialize all configured peripherals */
 130:Core/Src/main.c ****   MX_GPIO_Init();
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 132:Core/Src/main.c ****   MX_DMA_Init();
 133:Core/Src/main.c ****   MX_ADC1_Init();
 134:Core/Src/main.c ****   MX_I2C1_Init();
 135:Core/Src/main.c ****   MX_I2C2_Init();
 136:Core/Src/main.c ****   MX_TIM5_Init();
 137:Core/Src/main.c ****   MX_UART5_Init();
 138:Core/Src/main.c ****   MX_USART3_UART_Init();
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 140:Core/Src/main.c ****   xTaskCreate(&Default_task, "Default", 256, NULL, 1, &DefaultTask);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   //Start Scheduler
 143:Core/Src/main.c ****   vTaskStartScheduler();
 144:Core/Src/main.c ****   /* USER CODE END 2 */
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 4


 146:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 147:Core/Src/main.c ****   /* Infinite loop */
 148:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 149:Core/Src/main.c ****   while (1)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     /* USER CODE END WHILE */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c ****   /* USER CODE END 3 */
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****   * @brief System Clock Configuration
 160:Core/Src/main.c ****   * @retval None
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c **** void SystemClock_Config(void)
 163:Core/Src/main.c **** {
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief ADC1 Initialization Function
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 5


 203:Core/Src/main.c ****   * @param None
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** static void MX_ADC1_Init(void)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 218:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   hadc1.Instance = ADC1;
 221:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 222:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 223:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 224:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 225:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 227:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 228:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 229:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 230:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 231:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 232:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 239:Core/Src/main.c ****   sConfig.Rank = 1;
 240:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 241:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 253:Core/Src/main.c ****   * @param None
 254:Core/Src/main.c ****   * @retval None
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** static void MX_I2C1_Init(void)
 257:Core/Src/main.c **** {
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 266:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 267:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 268:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 269:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 270:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 271:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 272:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 273:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 274:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 275:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_I2C2_Init(void)
 291:Core/Src/main.c **** {
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 300:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 301:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 302:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 303:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 304:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 305:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 306:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 307:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 308:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 309:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 7


 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 321:Core/Src/main.c ****   * @param None
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** static void MX_TIM5_Init(void)
 325:Core/Src/main.c **** {
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 332:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 333:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 338:Core/Src/main.c ****   htim5.Instance = TIM5;
 339:Core/Src/main.c ****   htim5.Init.Prescaler = 640;
 340:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 341:Core/Src/main.c ****   htim5.Init.Period = 2000;
 342:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 343:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 349:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 358:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 364:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 365:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 366:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 367:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 8


 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 380:Core/Src/main.c ****   {
 381:Core/Src/main.c ****     Error_Handler();
 382:Core/Src/main.c ****   }
 383:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 386:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** }
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /**
 391:Core/Src/main.c ****   * @brief UART5 Initialization Function
 392:Core/Src/main.c ****   * @param None
 393:Core/Src/main.c ****   * @retval None
 394:Core/Src/main.c ****   */
 395:Core/Src/main.c **** static void MX_UART5_Init(void)
 396:Core/Src/main.c **** {
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 0 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END UART5_Init 0 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 1 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END UART5_Init 1 */
 405:Core/Src/main.c ****   huart5.Instance = UART5;
 406:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 407:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 408:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 409:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 410:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 411:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 412:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 413:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     Error_Handler();
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 2 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE END UART5_Init 2 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** }
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** /**
 424:Core/Src/main.c ****   * @brief USART1 Initialization Function
 425:Core/Src/main.c ****   * @param None
 426:Core/Src/main.c ****   * @retval None
 427:Core/Src/main.c ****   */
 428:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 429:Core/Src/main.c **** {
 430:Core/Src/main.c **** 
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 438:Core/Src/main.c ****   huart1.Instance = USART1;
 439:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 440:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 441:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 442:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 443:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 444:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 445:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 446:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief USART3 Initialization Function
 458:Core/Src/main.c ****   * @param None
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 462:Core/Src/main.c **** {
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 471:Core/Src/main.c ****   huart3.Instance = USART3;
 472:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 473:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 474:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 475:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 476:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 477:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 478:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 479:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 480:Core/Src/main.c ****   {
 481:Core/Src/main.c ****     Error_Handler();
 482:Core/Src/main.c ****   }
 483:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** }
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** /**
 490:Core/Src/main.c ****   * Enable DMA controller clock
 491:Core/Src/main.c ****   */
 492:Core/Src/main.c **** static void MX_DMA_Init(void)
 493:Core/Src/main.c **** {
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* DMA controller clock enable */
 496:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* DMA interrupt init */
 499:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 500:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 5, 0);
 501:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** }
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** /**
 506:Core/Src/main.c ****   * @brief GPIO Initialization Function
 507:Core/Src/main.c ****   * @param None
 508:Core/Src/main.c ****   * @retval None
 509:Core/Src/main.c ****   */
 510:Core/Src/main.c **** static void MX_GPIO_Init(void)
 511:Core/Src/main.c **** {
  28              		.loc 1 511 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 512:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 512 3 view .LVU1
  42              		.loc 1 512 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 515:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 515 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 515 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 515 3 view .LVU5
  54 0012 264B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 11


  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 515 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 515 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 515 3 view .LVU8
 516:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 516 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 516 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 516 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00402 		orr	r2, r2, #4
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 516 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00402 		and	r2, r2, #4
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 516 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 516 3 view .LVU14
 517:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 517 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 517 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 517 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 517 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0292     		str	r2, [sp, #8]
  94              		.loc 1 517 3 view .LVU19
  95 004c 029A     		ldr	r2, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 517 3 view .LVU20
 518:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 518 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 518 3 view .LVU22
 101 004e 0394     		str	r4, [sp, #12]
 102              		.loc 1 518 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 518 3 view .LVU24
 107 0058 1A6B     		ldr	r2, [r3, #48]
 108 005a 02F00202 		and	r2, r2, #2
 109 005e 0392     		str	r2, [sp, #12]
 110              		.loc 1 518 3 view .LVU25
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 12


 111 0060 039A     		ldr	r2, [sp, #12]
 112              	.LBE7:
 113              		.loc 1 518 3 view .LVU26
 519:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 114              		.loc 1 519 3 view .LVU27
 115              	.LBB8:
 116              		.loc 1 519 3 view .LVU28
 117 0062 0494     		str	r4, [sp, #16]
 118              		.loc 1 519 3 view .LVU29
 119 0064 1A6B     		ldr	r2, [r3, #48]
 120 0066 42F00802 		orr	r2, r2, #8
 121 006a 1A63     		str	r2, [r3, #48]
 122              		.loc 1 519 3 view .LVU30
 123 006c 1B6B     		ldr	r3, [r3, #48]
 124 006e 03F00803 		and	r3, r3, #8
 125 0072 0493     		str	r3, [sp, #16]
 126              		.loc 1 519 3 view .LVU31
 127 0074 049B     		ldr	r3, [sp, #16]
 128              	.LBE8:
 129              		.loc 1 519 3 view .LVU32
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 522:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_SET);
 130              		.loc 1 522 3 view .LVU33
 131 0076 0E4D     		ldr	r5, .L3+4
 132 0078 0122     		movs	r2, #1
 133 007a 0F21     		movs	r1, #15
 134 007c 2846     		mov	r0, r5
 135 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 136              	.LVL0:
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /*Configure GPIO pins : LED1_Pin LED2_Pin LED3_Pin LED4_Pin */
 525:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin;
 137              		.loc 1 525 3 view .LVU34
 138              		.loc 1 525 23 is_stmt 0 view .LVU35
 139 0082 0F23     		movs	r3, #15
 140 0084 0593     		str	r3, [sp, #20]
 526:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 526 3 is_stmt 1 view .LVU36
 142              		.loc 1 526 24 is_stmt 0 view .LVU37
 143 0086 0123     		movs	r3, #1
 144 0088 0693     		str	r3, [sp, #24]
 527:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 527 3 is_stmt 1 view .LVU38
 146              		.loc 1 527 24 is_stmt 0 view .LVU39
 147 008a 0794     		str	r4, [sp, #28]
 528:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 528 3 is_stmt 1 view .LVU40
 149              		.loc 1 528 25 is_stmt 0 view .LVU41
 150 008c 0894     		str	r4, [sp, #32]
 529:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 151              		.loc 1 529 3 is_stmt 1 view .LVU42
 152 008e 05A9     		add	r1, sp, #20
 153 0090 2846     		mov	r0, r5
 154 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL1:
 530:Core/Src/main.c **** 
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 13


 531:Core/Src/main.c ****   /*Configure GPIO pins : BTN1_Pin BTN2_Pin PC8_Pin PC9_Pin */
 532:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN1_Pin|BTN2_Pin|PC8_Pin|PC9_Pin;
 156              		.loc 1 532 3 view .LVU43
 157              		.loc 1 532 23 is_stmt 0 view .LVU44
 158 0096 4FF44C73 		mov	r3, #816
 159 009a 0593     		str	r3, [sp, #20]
 533:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 160              		.loc 1 533 3 is_stmt 1 view .LVU45
 161              		.loc 1 533 24 is_stmt 0 view .LVU46
 162 009c 0694     		str	r4, [sp, #24]
 534:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 534 3 is_stmt 1 view .LVU47
 164              		.loc 1 534 24 is_stmt 0 view .LVU48
 165 009e 0794     		str	r4, [sp, #28]
 535:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 166              		.loc 1 535 3 is_stmt 1 view .LVU49
 167 00a0 05A9     		add	r1, sp, #20
 168 00a2 2846     		mov	r0, r5
 169 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL2:
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** }
 171              		.loc 1 537 1 is_stmt 0 view .LVU50
 172 00a8 0BB0     		add	sp, sp, #44
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 12
 175              		@ sp needed
 176 00aa 30BD     		pop	{r4, r5, pc}
 177              	.L4:
 178              		.align	2
 179              	.L3:
 180 00ac 00380240 		.word	1073887232
 181 00b0 00080240 		.word	1073874944
 182              		.cfi_endproc
 183              	.LFE250:
 185              		.section	.text.MX_DMA_Init,"ax",%progbits
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	MX_DMA_Init:
 192              	.LFB249:
 493:Core/Src/main.c **** 
 193              		.loc 1 493 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 00B5     		push	{lr}
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 14, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 16
 496:Core/Src/main.c **** 
 204              		.loc 1 496 3 view .LVU52
 205              	.LBB9:
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 14


 496:Core/Src/main.c **** 
 206              		.loc 1 496 3 view .LVU53
 207 0004 0022     		movs	r2, #0
 208 0006 0192     		str	r2, [sp, #4]
 496:Core/Src/main.c **** 
 209              		.loc 1 496 3 view .LVU54
 210 0008 094B     		ldr	r3, .L7
 211 000a 196B     		ldr	r1, [r3, #48]
 212 000c 41F48001 		orr	r1, r1, #4194304
 213 0010 1963     		str	r1, [r3, #48]
 496:Core/Src/main.c **** 
 214              		.loc 1 496 3 view .LVU55
 215 0012 1B6B     		ldr	r3, [r3, #48]
 216 0014 03F48003 		and	r3, r3, #4194304
 217 0018 0193     		str	r3, [sp, #4]
 496:Core/Src/main.c **** 
 218              		.loc 1 496 3 view .LVU56
 219 001a 019B     		ldr	r3, [sp, #4]
 220              	.LBE9:
 496:Core/Src/main.c **** 
 221              		.loc 1 496 3 view .LVU57
 500:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 222              		.loc 1 500 3 view .LVU58
 223 001c 0521     		movs	r1, #5
 224 001e 3820     		movs	r0, #56
 225 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 226              	.LVL3:
 501:Core/Src/main.c **** 
 227              		.loc 1 501 3 view .LVU59
 228 0024 3820     		movs	r0, #56
 229 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 230              	.LVL4:
 503:Core/Src/main.c **** 
 231              		.loc 1 503 1 is_stmt 0 view .LVU60
 232 002a 03B0     		add	sp, sp, #12
 233              	.LCFI5:
 234              		.cfi_def_cfa_offset 4
 235              		@ sp needed
 236 002c 5DF804FB 		ldr	pc, [sp], #4
 237              	.L8:
 238              		.align	2
 239              	.L7:
 240 0030 00380240 		.word	1073887232
 241              		.cfi_endproc
 242              	.LFE249:
 244              		.section	.text.Default_task,"ax",%progbits
 245              		.align	1
 246              		.global	Default_task
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	Default_task:
 252              	.LVL5:
 253              	.LFB252:
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 540:Core/Src/main.c **** PUTCHAR_PROTOTYPE {
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 15


 541:Core/Src/main.c **** 	/* Place your implementation of fputc here */
 542:Core/Src/main.c **** 	/* e.g. write a character to the USART3 and Loop until the end of transmission */
 543:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*) &ch, 1, 0xFFFF);
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** 	return ch;
 546:Core/Src/main.c **** }
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** void Default_task (void *pvParameters) {
 254              		.loc 1 548 40 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ Volatile: function does not return.
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		.loc 1 548 40 is_stmt 0 view .LVU62
 260 0000 00B5     		push	{lr}
 261              	.LCFI6:
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 14, -4
 264 0002 87B0     		sub	sp, sp, #28
 265              	.LCFI7:
 266              		.cfi_def_cfa_offset 32
 549:Core/Src/main.c ****   sensors.hmchi2c = &hi2c1;
 267              		.loc 1 549 3 is_stmt 1 view .LVU63
 268              		.loc 1 549 19 is_stmt 0 view .LVU64
 269 0004 124B     		ldr	r3, .L12
 270 0006 134A     		ldr	r2, .L12+4
 271 0008 C3F88020 		str	r2, [r3, #128]
 550:Core/Src/main.c ****   sensors.mpuhi2c = &hi2c1;
 272              		.loc 1 550 3 is_stmt 1 view .LVU65
 273              		.loc 1 550 19 is_stmt 0 view .LVU66
 274 000c DA67     		str	r2, [r3, #124]
 551:Core/Src/main.c ****   uint8_t dataR;
 275              		.loc 1 551 3 is_stmt 1 view .LVU67
 552:Core/Src/main.c ****   static HAL_StatusTypeDef status;
 276              		.loc 1 552 3 view .LVU68
 553:Core/Src/main.c ****   // sensors_init(&sensors);
 554:Core/Src/main.c ****   TickType_t xTimerStart = xTaskGetTickCount();
 277              		.loc 1 554 3 view .LVU69
 278              		.loc 1 554 28 is_stmt 0 view .LVU70
 279 000e FFF7FEFF 		bl	xTaskGetTickCount
 280              	.LVL6:
 281              		.loc 1 554 14 view .LVU71
 282 0012 0490     		str	r0, [sp, #16]
 283              	.L10:
 555:Core/Src/main.c ****   for(;;) {
 284              		.loc 1 555 3 is_stmt 1 discriminator 1 view .LVU72
 556:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 285              		.loc 1 556 5 discriminator 1 view .LVU73
 286 0014 104C     		ldr	r4, .L12+8
 287 0016 0121     		movs	r1, #1
 288 0018 2046     		mov	r0, r4
 289 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 290              	.LVL7:
 557:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 291              		.loc 1 557 5 discriminator 1 view .LVU74
 292 001e 0221     		movs	r1, #2
 293 0020 2046     		mov	r0, r4
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 16


 294 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 295              	.LVL8:
 558:Core/Src/main.c ****     // sensors_update(&sensors);
 559:Core/Src/main.c ****     status = HAL_I2C_Mem_Read(&hi2c1, HMC5883L_ADDRESS << 1, HMC5883L_RA_ID_A, 1, &dataR, 1, 100);
 296              		.loc 1 559 5 discriminator 1 view .LVU75
 297              		.loc 1 559 14 is_stmt 0 discriminator 1 view .LVU76
 298 0026 6423     		movs	r3, #100
 299 0028 0293     		str	r3, [sp, #8]
 300 002a 0123     		movs	r3, #1
 301 002c 0193     		str	r3, [sp, #4]
 302 002e 0DF11702 		add	r2, sp, #23
 303 0032 0092     		str	r2, [sp]
 304 0034 0A22     		movs	r2, #10
 305 0036 3C21     		movs	r1, #60
 306 0038 0648     		ldr	r0, .L12+4
 307 003a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 308              	.LVL9:
 309              		.loc 1 559 12 discriminator 1 view .LVU77
 310 003e 074B     		ldr	r3, .L12+12
 311 0040 1870     		strb	r0, [r3]
 560:Core/Src/main.c ****     vTaskDelayUntil(&xTimerStart, 500);
 312              		.loc 1 560 5 is_stmt 1 discriminator 1 view .LVU78
 313 0042 4FF4FA71 		mov	r1, #500
 314 0046 04A8     		add	r0, sp, #16
 315 0048 FFF7FEFF 		bl	vTaskDelayUntil
 316              	.LVL10:
 555:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 317              		.loc 1 555 8 discriminator 1 view .LVU79
 318 004c E2E7     		b	.L10
 319              	.L13:
 320 004e 00BF     		.align	2
 321              	.L12:
 322 0050 00000000 		.word	.LANCHOR0
 323 0054 00000000 		.word	.LANCHOR1
 324 0058 00080240 		.word	1073874944
 325 005c 00000000 		.word	.LANCHOR2
 326              		.cfi_endproc
 327              	.LFE252:
 329              		.section	.text.__io_putchar,"ax",%progbits
 330              		.align	1
 331              		.global	__io_putchar
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 336              	__io_putchar:
 337              	.LVL11:
 338              	.LFB251:
 540:Core/Src/main.c **** 	/* Place your implementation of fputc here */
 339              		.loc 1 540 19 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 540:Core/Src/main.c **** 	/* Place your implementation of fputc here */
 343              		.loc 1 540 19 is_stmt 0 view .LVU81
 344 0000 00B5     		push	{lr}
 345              	.LCFI8:
 346              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 17


 347              		.cfi_offset 14, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              	.LCFI9:
 350              		.cfi_def_cfa_offset 16
 351 0004 0190     		str	r0, [sp, #4]
 543:Core/Src/main.c **** 
 352              		.loc 1 543 2 is_stmt 1 view .LVU82
 353 0006 4FF6FF73 		movw	r3, #65535
 354 000a 0122     		movs	r2, #1
 355 000c 01A9     		add	r1, sp, #4
 356 000e 0348     		ldr	r0, .L16
 357              	.LVL12:
 543:Core/Src/main.c **** 
 358              		.loc 1 543 2 is_stmt 0 view .LVU83
 359 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 360              	.LVL13:
 545:Core/Src/main.c **** }
 361              		.loc 1 545 2 is_stmt 1 view .LVU84
 546:Core/Src/main.c **** 
 362              		.loc 1 546 1 is_stmt 0 view .LVU85
 363 0014 0198     		ldr	r0, [sp, #4]
 364 0016 03B0     		add	sp, sp, #12
 365              	.LCFI10:
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0018 5DF804FB 		ldr	pc, [sp], #4
 369              	.L17:
 370              		.align	2
 371              	.L16:
 372 001c 00000000 		.word	.LANCHOR3
 373              		.cfi_endproc
 374              	.LFE251:
 376              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_TIM_PeriodElapsedCallback
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	HAL_TIM_PeriodElapsedCallback:
 384              	.LVL14:
 385              	.LFB253:
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c **** }
 563:Core/Src/main.c **** /* USER CODE END 4 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /**
 567:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 568:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 569:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 570:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 571:Core/Src/main.c ****   * @param  htim : TIM handle
 572:Core/Src/main.c ****   * @retval None
 573:Core/Src/main.c ****   */
 574:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 575:Core/Src/main.c **** {
 386              		.loc 1 575 1 is_stmt 1 view -0
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 18


 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		.loc 1 575 1 is_stmt 0 view .LVU87
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI11:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 576:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 579:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 396              		.loc 1 579 3 is_stmt 1 view .LVU88
 397              		.loc 1 579 11 is_stmt 0 view .LVU89
 398 0002 0268     		ldr	r2, [r0]
 399              		.loc 1 579 6 view .LVU90
 400 0004 034B     		ldr	r3, .L22
 401 0006 9A42     		cmp	r2, r3
 402 0008 00D0     		beq	.L21
 403              	.LVL15:
 404              	.L18:
 580:Core/Src/main.c ****     HAL_IncTick();
 581:Core/Src/main.c ****   }
 582:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 585:Core/Src/main.c **** }
 405              		.loc 1 585 1 view .LVU91
 406 000a 08BD     		pop	{r3, pc}
 407              	.LVL16:
 408              	.L21:
 580:Core/Src/main.c ****     HAL_IncTick();
 409              		.loc 1 580 5 is_stmt 1 view .LVU92
 410 000c FFF7FEFF 		bl	HAL_IncTick
 411              	.LVL17:
 412              		.loc 1 585 1 is_stmt 0 view .LVU93
 413 0010 FBE7     		b	.L18
 414              	.L23:
 415 0012 00BF     		.align	2
 416              	.L22:
 417 0014 00100040 		.word	1073745920
 418              		.cfi_endproc
 419              	.LFE253:
 421              		.section	.text.Error_Handler,"ax",%progbits
 422              		.align	1
 423              		.global	Error_Handler
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	Error_Handler:
 429              	.LFB254:
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** /**
 588:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 589:Core/Src/main.c ****   * @retval None
 590:Core/Src/main.c ****   */
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 19


 591:Core/Src/main.c **** void Error_Handler(void)
 592:Core/Src/main.c **** {
 430              		.loc 1 592 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ Volatile: function does not return.
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 593:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 594:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 595:Core/Src/main.c ****   __disable_irq();
 436              		.loc 1 595 3 view .LVU95
 437              	.LBB10:
 438              	.LBI10:
 439              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 20


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 21


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 440              		.loc 2 140 27 view .LVU96
 441              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 442              		.loc 2 142 3 view .LVU97
 443              		.syntax unified
 444              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 445 0000 72B6     		cpsid i
 446              	@ 0 "" 2
 447              		.thumb
 448              		.syntax unified
 449              	.L25:
 450              	.LBE11:
 451              	.LBE10:
 596:Core/Src/main.c ****   while (1)
 452              		.loc 1 596 3 discriminator 1 view .LVU98
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 22


 597:Core/Src/main.c ****   {
 598:Core/Src/main.c ****   }
 453              		.loc 1 598 3 discriminator 1 view .LVU99
 596:Core/Src/main.c ****   while (1)
 454              		.loc 1 596 9 discriminator 1 view .LVU100
 455 0002 FEE7     		b	.L25
 456              		.cfi_endproc
 457              	.LFE254:
 459              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 460              		.align	1
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	MX_USART1_UART_Init:
 466              	.LFB247:
 429:Core/Src/main.c **** 
 467              		.loc 1 429 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 08B5     		push	{r3, lr}
 472              	.LCFI12:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 438:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 476              		.loc 1 438 3 view .LVU102
 438:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 477              		.loc 1 438 19 is_stmt 0 view .LVU103
 478 0002 0A48     		ldr	r0, .L30
 479 0004 0A4B     		ldr	r3, .L30+4
 480 0006 0360     		str	r3, [r0]
 439:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 481              		.loc 1 439 3 is_stmt 1 view .LVU104
 439:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 482              		.loc 1 439 24 is_stmt 0 view .LVU105
 483 0008 4FF4E133 		mov	r3, #115200
 484 000c 4360     		str	r3, [r0, #4]
 440:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 485              		.loc 1 440 3 is_stmt 1 view .LVU106
 440:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 486              		.loc 1 440 26 is_stmt 0 view .LVU107
 487 000e 0023     		movs	r3, #0
 488 0010 8360     		str	r3, [r0, #8]
 441:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 489              		.loc 1 441 3 is_stmt 1 view .LVU108
 441:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 490              		.loc 1 441 24 is_stmt 0 view .LVU109
 491 0012 C360     		str	r3, [r0, #12]
 442:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 492              		.loc 1 442 3 is_stmt 1 view .LVU110
 442:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 493              		.loc 1 442 22 is_stmt 0 view .LVU111
 494 0014 0361     		str	r3, [r0, #16]
 443:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 495              		.loc 1 443 3 is_stmt 1 view .LVU112
 443:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 23


 496              		.loc 1 443 20 is_stmt 0 view .LVU113
 497 0016 0C22     		movs	r2, #12
 498 0018 4261     		str	r2, [r0, #20]
 444:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 499              		.loc 1 444 3 is_stmt 1 view .LVU114
 444:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 500              		.loc 1 444 25 is_stmt 0 view .LVU115
 501 001a 8361     		str	r3, [r0, #24]
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 502              		.loc 1 445 3 is_stmt 1 view .LVU116
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 503              		.loc 1 445 28 is_stmt 0 view .LVU117
 504 001c C361     		str	r3, [r0, #28]
 446:Core/Src/main.c ****   {
 505              		.loc 1 446 3 is_stmt 1 view .LVU118
 446:Core/Src/main.c ****   {
 506              		.loc 1 446 7 is_stmt 0 view .LVU119
 507 001e FFF7FEFF 		bl	HAL_UART_Init
 508              	.LVL18:
 446:Core/Src/main.c ****   {
 509              		.loc 1 446 6 view .LVU120
 510 0022 00B9     		cbnz	r0, .L29
 454:Core/Src/main.c **** 
 511              		.loc 1 454 1 view .LVU121
 512 0024 08BD     		pop	{r3, pc}
 513              	.L29:
 448:Core/Src/main.c ****   }
 514              		.loc 1 448 5 is_stmt 1 view .LVU122
 515 0026 FFF7FEFF 		bl	Error_Handler
 516              	.LVL19:
 517              	.L31:
 518 002a 00BF     		.align	2
 519              	.L30:
 520 002c 00000000 		.word	.LANCHOR3
 521 0030 00100140 		.word	1073811456
 522              		.cfi_endproc
 523              	.LFE247:
 525              		.section	.text.MX_ADC1_Init,"ax",%progbits
 526              		.align	1
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	MX_ADC1_Init:
 532              	.LFB242:
 207:Core/Src/main.c **** 
 533              		.loc 1 207 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 16
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 00B5     		push	{lr}
 538              	.LCFI13:
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 14, -4
 541 0002 85B0     		sub	sp, sp, #20
 542              	.LCFI14:
 543              		.cfi_def_cfa_offset 24
 213:Core/Src/main.c **** 
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 24


 544              		.loc 1 213 3 view .LVU124
 213:Core/Src/main.c **** 
 545              		.loc 1 213 26 is_stmt 0 view .LVU125
 546 0004 0023     		movs	r3, #0
 547 0006 0093     		str	r3, [sp]
 548 0008 0193     		str	r3, [sp, #4]
 549 000a 0293     		str	r3, [sp, #8]
 550 000c 0393     		str	r3, [sp, #12]
 220:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 551              		.loc 1 220 3 is_stmt 1 view .LVU126
 220:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 552              		.loc 1 220 18 is_stmt 0 view .LVU127
 553 000e 1348     		ldr	r0, .L38
 554 0010 134A     		ldr	r2, .L38+4
 555 0012 0260     		str	r2, [r0]
 221:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 556              		.loc 1 221 3 is_stmt 1 view .LVU128
 221:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 557              		.loc 1 221 29 is_stmt 0 view .LVU129
 558 0014 4360     		str	r3, [r0, #4]
 222:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 559              		.loc 1 222 3 is_stmt 1 view .LVU130
 222:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 560              		.loc 1 222 25 is_stmt 0 view .LVU131
 561 0016 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 562              		.loc 1 223 3 is_stmt 1 view .LVU132
 223:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 563              		.loc 1 223 27 is_stmt 0 view .LVU133
 564 0018 0361     		str	r3, [r0, #16]
 224:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 565              		.loc 1 224 3 is_stmt 1 view .LVU134
 224:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 566              		.loc 1 224 33 is_stmt 0 view .LVU135
 567 001a 0376     		strb	r3, [r0, #24]
 225:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 568              		.loc 1 225 3 is_stmt 1 view .LVU136
 225:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 569              		.loc 1 225 36 is_stmt 0 view .LVU137
 570 001c 80F82030 		strb	r3, [r0, #32]
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 571              		.loc 1 226 3 is_stmt 1 view .LVU138
 226:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 572              		.loc 1 226 35 is_stmt 0 view .LVU139
 573 0020 C362     		str	r3, [r0, #44]
 227:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 574              		.loc 1 227 3 is_stmt 1 view .LVU140
 227:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 575              		.loc 1 227 31 is_stmt 0 view .LVU141
 576 0022 104A     		ldr	r2, .L38+8
 577 0024 8262     		str	r2, [r0, #40]
 228:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 578              		.loc 1 228 3 is_stmt 1 view .LVU142
 228:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 579              		.loc 1 228 24 is_stmt 0 view .LVU143
 580 0026 C360     		str	r3, [r0, #12]
 229:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 25


 581              		.loc 1 229 3 is_stmt 1 view .LVU144
 229:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 582              		.loc 1 229 30 is_stmt 0 view .LVU145
 583 0028 0122     		movs	r2, #1
 584 002a C261     		str	r2, [r0, #28]
 230:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 585              		.loc 1 230 3 is_stmt 1 view .LVU146
 230:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 586              		.loc 1 230 36 is_stmt 0 view .LVU147
 587 002c 80F83030 		strb	r3, [r0, #48]
 231:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 588              		.loc 1 231 3 is_stmt 1 view .LVU148
 231:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 589              		.loc 1 231 27 is_stmt 0 view .LVU149
 590 0030 4261     		str	r2, [r0, #20]
 232:Core/Src/main.c ****   {
 591              		.loc 1 232 3 is_stmt 1 view .LVU150
 232:Core/Src/main.c ****   {
 592              		.loc 1 232 7 is_stmt 0 view .LVU151
 593 0032 FFF7FEFF 		bl	HAL_ADC_Init
 594              	.LVL20:
 232:Core/Src/main.c ****   {
 595              		.loc 1 232 6 view .LVU152
 596 0036 68B9     		cbnz	r0, .L36
 238:Core/Src/main.c ****   sConfig.Rank = 1;
 597              		.loc 1 238 3 is_stmt 1 view .LVU153
 238:Core/Src/main.c ****   sConfig.Rank = 1;
 598              		.loc 1 238 19 is_stmt 0 view .LVU154
 599 0038 0623     		movs	r3, #6
 600 003a 0093     		str	r3, [sp]
 239:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 601              		.loc 1 239 3 is_stmt 1 view .LVU155
 239:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 602              		.loc 1 239 16 is_stmt 0 view .LVU156
 603 003c 0123     		movs	r3, #1
 604 003e 0193     		str	r3, [sp, #4]
 240:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 605              		.loc 1 240 3 is_stmt 1 view .LVU157
 240:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 606              		.loc 1 240 24 is_stmt 0 view .LVU158
 607 0040 0723     		movs	r3, #7
 608 0042 0293     		str	r3, [sp, #8]
 241:Core/Src/main.c ****   {
 609              		.loc 1 241 3 is_stmt 1 view .LVU159
 241:Core/Src/main.c ****   {
 610              		.loc 1 241 7 is_stmt 0 view .LVU160
 611 0044 6946     		mov	r1, sp
 612 0046 0548     		ldr	r0, .L38
 613 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 614              	.LVL21:
 241:Core/Src/main.c ****   {
 615              		.loc 1 241 6 view .LVU161
 616 004c 20B9     		cbnz	r0, .L37
 249:Core/Src/main.c **** 
 617              		.loc 1 249 1 view .LVU162
 618 004e 05B0     		add	sp, sp, #20
 619              	.LCFI15:
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 26


 620              		.cfi_remember_state
 621              		.cfi_def_cfa_offset 4
 622              		@ sp needed
 623 0050 5DF804FB 		ldr	pc, [sp], #4
 624              	.L36:
 625              	.LCFI16:
 626              		.cfi_restore_state
 234:Core/Src/main.c ****   }
 627              		.loc 1 234 5 is_stmt 1 view .LVU163
 628 0054 FFF7FEFF 		bl	Error_Handler
 629              	.LVL22:
 630              	.L37:
 243:Core/Src/main.c ****   }
 631              		.loc 1 243 5 view .LVU164
 632 0058 FFF7FEFF 		bl	Error_Handler
 633              	.LVL23:
 634              	.L39:
 635              		.align	2
 636              	.L38:
 637 005c 00000000 		.word	.LANCHOR4
 638 0060 00200140 		.word	1073815552
 639 0064 0100000F 		.word	251658241
 640              		.cfi_endproc
 641              	.LFE242:
 643              		.section	.text.MX_I2C1_Init,"ax",%progbits
 644              		.align	1
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 649              	MX_I2C1_Init:
 650              	.LFB243:
 257:Core/Src/main.c **** 
 651              		.loc 1 257 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655 0000 08B5     		push	{r3, lr}
 656              	.LCFI17:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 3, -8
 659              		.cfi_offset 14, -4
 266:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 660              		.loc 1 266 3 view .LVU166
 266:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 661              		.loc 1 266 18 is_stmt 0 view .LVU167
 662 0002 0A48     		ldr	r0, .L44
 663 0004 0A4B     		ldr	r3, .L44+4
 664 0006 0360     		str	r3, [r0]
 267:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 665              		.loc 1 267 3 is_stmt 1 view .LVU168
 267:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 666              		.loc 1 267 25 is_stmt 0 view .LVU169
 667 0008 0A4B     		ldr	r3, .L44+8
 668 000a 4360     		str	r3, [r0, #4]
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 669              		.loc 1 268 3 is_stmt 1 view .LVU170
 268:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 27


 670              		.loc 1 268 24 is_stmt 0 view .LVU171
 671 000c 0023     		movs	r3, #0
 672 000e 8360     		str	r3, [r0, #8]
 269:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 673              		.loc 1 269 3 is_stmt 1 view .LVU172
 269:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 674              		.loc 1 269 26 is_stmt 0 view .LVU173
 675 0010 C360     		str	r3, [r0, #12]
 270:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 676              		.loc 1 270 3 is_stmt 1 view .LVU174
 270:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 677              		.loc 1 270 29 is_stmt 0 view .LVU175
 678 0012 4FF48042 		mov	r2, #16384
 679 0016 0261     		str	r2, [r0, #16]
 271:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 680              		.loc 1 271 3 is_stmt 1 view .LVU176
 271:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 681              		.loc 1 271 30 is_stmt 0 view .LVU177
 682 0018 4361     		str	r3, [r0, #20]
 272:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 683              		.loc 1 272 3 is_stmt 1 view .LVU178
 272:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 684              		.loc 1 272 26 is_stmt 0 view .LVU179
 685 001a 8361     		str	r3, [r0, #24]
 273:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 686              		.loc 1 273 3 is_stmt 1 view .LVU180
 273:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 687              		.loc 1 273 30 is_stmt 0 view .LVU181
 688 001c C361     		str	r3, [r0, #28]
 274:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 689              		.loc 1 274 3 is_stmt 1 view .LVU182
 274:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 690              		.loc 1 274 28 is_stmt 0 view .LVU183
 691 001e 0362     		str	r3, [r0, #32]
 275:Core/Src/main.c ****   {
 692              		.loc 1 275 3 is_stmt 1 view .LVU184
 275:Core/Src/main.c ****   {
 693              		.loc 1 275 7 is_stmt 0 view .LVU185
 694 0020 FFF7FEFF 		bl	HAL_I2C_Init
 695              	.LVL24:
 275:Core/Src/main.c ****   {
 696              		.loc 1 275 6 view .LVU186
 697 0024 00B9     		cbnz	r0, .L43
 283:Core/Src/main.c **** 
 698              		.loc 1 283 1 view .LVU187
 699 0026 08BD     		pop	{r3, pc}
 700              	.L43:
 277:Core/Src/main.c ****   }
 701              		.loc 1 277 5 is_stmt 1 view .LVU188
 702 0028 FFF7FEFF 		bl	Error_Handler
 703              	.LVL25:
 704              	.L45:
 705              		.align	2
 706              	.L44:
 707 002c 00000000 		.word	.LANCHOR1
 708 0030 00540040 		.word	1073763328
 709 0034 A0860100 		.word	100000
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 28


 710              		.cfi_endproc
 711              	.LFE243:
 713              		.section	.text.MX_I2C2_Init,"ax",%progbits
 714              		.align	1
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	MX_I2C2_Init:
 720              	.LFB244:
 291:Core/Src/main.c **** 
 721              		.loc 1 291 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725 0000 08B5     		push	{r3, lr}
 726              	.LCFI18:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 3, -8
 729              		.cfi_offset 14, -4
 300:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 730              		.loc 1 300 3 view .LVU190
 300:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 731              		.loc 1 300 18 is_stmt 0 view .LVU191
 732 0002 0A48     		ldr	r0, .L50
 733 0004 0A4B     		ldr	r3, .L50+4
 734 0006 0360     		str	r3, [r0]
 301:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 735              		.loc 1 301 3 is_stmt 1 view .LVU192
 301:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 736              		.loc 1 301 25 is_stmt 0 view .LVU193
 737 0008 0A4B     		ldr	r3, .L50+8
 738 000a 4360     		str	r3, [r0, #4]
 302:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 739              		.loc 1 302 3 is_stmt 1 view .LVU194
 302:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 740              		.loc 1 302 24 is_stmt 0 view .LVU195
 741 000c 0023     		movs	r3, #0
 742 000e 8360     		str	r3, [r0, #8]
 303:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 743              		.loc 1 303 3 is_stmt 1 view .LVU196
 303:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 744              		.loc 1 303 26 is_stmt 0 view .LVU197
 745 0010 C360     		str	r3, [r0, #12]
 304:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 746              		.loc 1 304 3 is_stmt 1 view .LVU198
 304:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 747              		.loc 1 304 29 is_stmt 0 view .LVU199
 748 0012 4FF48042 		mov	r2, #16384
 749 0016 0261     		str	r2, [r0, #16]
 305:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 750              		.loc 1 305 3 is_stmt 1 view .LVU200
 305:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 751              		.loc 1 305 30 is_stmt 0 view .LVU201
 752 0018 4361     		str	r3, [r0, #20]
 306:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 753              		.loc 1 306 3 is_stmt 1 view .LVU202
 306:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 29


 754              		.loc 1 306 26 is_stmt 0 view .LVU203
 755 001a 8361     		str	r3, [r0, #24]
 307:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 756              		.loc 1 307 3 is_stmt 1 view .LVU204
 307:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 757              		.loc 1 307 30 is_stmt 0 view .LVU205
 758 001c C361     		str	r3, [r0, #28]
 308:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 759              		.loc 1 308 3 is_stmt 1 view .LVU206
 308:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 760              		.loc 1 308 28 is_stmt 0 view .LVU207
 761 001e 0362     		str	r3, [r0, #32]
 309:Core/Src/main.c ****   {
 762              		.loc 1 309 3 is_stmt 1 view .LVU208
 309:Core/Src/main.c ****   {
 763              		.loc 1 309 7 is_stmt 0 view .LVU209
 764 0020 FFF7FEFF 		bl	HAL_I2C_Init
 765              	.LVL26:
 309:Core/Src/main.c ****   {
 766              		.loc 1 309 6 view .LVU210
 767 0024 00B9     		cbnz	r0, .L49
 317:Core/Src/main.c **** 
 768              		.loc 1 317 1 view .LVU211
 769 0026 08BD     		pop	{r3, pc}
 770              	.L49:
 311:Core/Src/main.c ****   }
 771              		.loc 1 311 5 is_stmt 1 view .LVU212
 772 0028 FFF7FEFF 		bl	Error_Handler
 773              	.LVL27:
 774              	.L51:
 775              		.align	2
 776              	.L50:
 777 002c 00000000 		.word	.LANCHOR5
 778 0030 00580040 		.word	1073764352
 779 0034 A0860100 		.word	100000
 780              		.cfi_endproc
 781              	.LFE244:
 783              		.section	.text.MX_TIM5_Init,"ax",%progbits
 784              		.align	1
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	MX_TIM5_Init:
 790              	.LFB245:
 325:Core/Src/main.c **** 
 791              		.loc 1 325 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 56
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 00B5     		push	{lr}
 796              	.LCFI19:
 797              		.cfi_def_cfa_offset 4
 798              		.cfi_offset 14, -4
 799 0002 8FB0     		sub	sp, sp, #60
 800              	.LCFI20:
 801              		.cfi_def_cfa_offset 64
 331:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 30


 802              		.loc 1 331 3 view .LVU214
 331:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 803              		.loc 1 331 26 is_stmt 0 view .LVU215
 804 0004 0023     		movs	r3, #0
 805 0006 0A93     		str	r3, [sp, #40]
 806 0008 0B93     		str	r3, [sp, #44]
 807 000a 0C93     		str	r3, [sp, #48]
 808 000c 0D93     		str	r3, [sp, #52]
 332:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 809              		.loc 1 332 3 is_stmt 1 view .LVU216
 332:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 810              		.loc 1 332 27 is_stmt 0 view .LVU217
 811 000e 0893     		str	r3, [sp, #32]
 812 0010 0993     		str	r3, [sp, #36]
 333:Core/Src/main.c **** 
 813              		.loc 1 333 3 is_stmt 1 view .LVU218
 333:Core/Src/main.c **** 
 814              		.loc 1 333 22 is_stmt 0 view .LVU219
 815 0012 0193     		str	r3, [sp, #4]
 816 0014 0293     		str	r3, [sp, #8]
 817 0016 0393     		str	r3, [sp, #12]
 818 0018 0493     		str	r3, [sp, #16]
 819 001a 0593     		str	r3, [sp, #20]
 820 001c 0693     		str	r3, [sp, #24]
 821 001e 0793     		str	r3, [sp, #28]
 338:Core/Src/main.c ****   htim5.Init.Prescaler = 640;
 822              		.loc 1 338 3 is_stmt 1 view .LVU220
 338:Core/Src/main.c ****   htim5.Init.Prescaler = 640;
 823              		.loc 1 338 18 is_stmt 0 view .LVU221
 824 0020 2C48     		ldr	r0, .L70
 825 0022 2D4A     		ldr	r2, .L70+4
 826 0024 0260     		str	r2, [r0]
 339:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 827              		.loc 1 339 3 is_stmt 1 view .LVU222
 339:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 828              		.loc 1 339 24 is_stmt 0 view .LVU223
 829 0026 4FF42072 		mov	r2, #640
 830 002a 4260     		str	r2, [r0, #4]
 340:Core/Src/main.c ****   htim5.Init.Period = 2000;
 831              		.loc 1 340 3 is_stmt 1 view .LVU224
 340:Core/Src/main.c ****   htim5.Init.Period = 2000;
 832              		.loc 1 340 26 is_stmt 0 view .LVU225
 833 002c 8360     		str	r3, [r0, #8]
 341:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 834              		.loc 1 341 3 is_stmt 1 view .LVU226
 341:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 835              		.loc 1 341 21 is_stmt 0 view .LVU227
 836 002e 4FF4FA62 		mov	r2, #2000
 837 0032 C260     		str	r2, [r0, #12]
 342:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 838              		.loc 1 342 3 is_stmt 1 view .LVU228
 342:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 839              		.loc 1 342 28 is_stmt 0 view .LVU229
 840 0034 0361     		str	r3, [r0, #16]
 343:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 841              		.loc 1 343 3 is_stmt 1 view .LVU230
 343:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 31


 842              		.loc 1 343 32 is_stmt 0 view .LVU231
 843 0036 8361     		str	r3, [r0, #24]
 344:Core/Src/main.c ****   {
 844              		.loc 1 344 3 is_stmt 1 view .LVU232
 344:Core/Src/main.c ****   {
 845              		.loc 1 344 7 is_stmt 0 view .LVU233
 846 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 847              	.LVL28:
 344:Core/Src/main.c ****   {
 848              		.loc 1 344 6 view .LVU234
 849 003c 0028     		cmp	r0, #0
 850 003e 39D1     		bne	.L62
 348:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 851              		.loc 1 348 3 is_stmt 1 view .LVU235
 348:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 852              		.loc 1 348 34 is_stmt 0 view .LVU236
 853 0040 4FF48053 		mov	r3, #4096
 854 0044 0A93     		str	r3, [sp, #40]
 349:Core/Src/main.c ****   {
 855              		.loc 1 349 3 is_stmt 1 view .LVU237
 349:Core/Src/main.c ****   {
 856              		.loc 1 349 7 is_stmt 0 view .LVU238
 857 0046 0AA9     		add	r1, sp, #40
 858 0048 2248     		ldr	r0, .L70
 859 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 860              	.LVL29:
 349:Core/Src/main.c ****   {
 861              		.loc 1 349 6 view .LVU239
 862 004e 0028     		cmp	r0, #0
 863 0050 32D1     		bne	.L63
 353:Core/Src/main.c ****   {
 864              		.loc 1 353 3 is_stmt 1 view .LVU240
 353:Core/Src/main.c ****   {
 865              		.loc 1 353 7 is_stmt 0 view .LVU241
 866 0052 2048     		ldr	r0, .L70
 867 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 868              	.LVL30:
 353:Core/Src/main.c ****   {
 869              		.loc 1 353 6 view .LVU242
 870 0058 0028     		cmp	r0, #0
 871 005a 2FD1     		bne	.L64
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 872              		.loc 1 357 3 is_stmt 1 view .LVU243
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 873              		.loc 1 357 37 is_stmt 0 view .LVU244
 874 005c 0023     		movs	r3, #0
 875 005e 0893     		str	r3, [sp, #32]
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 876              		.loc 1 358 3 is_stmt 1 view .LVU245
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 877              		.loc 1 358 33 is_stmt 0 view .LVU246
 878 0060 0993     		str	r3, [sp, #36]
 359:Core/Src/main.c ****   {
 879              		.loc 1 359 3 is_stmt 1 view .LVU247
 359:Core/Src/main.c ****   {
 880              		.loc 1 359 7 is_stmt 0 view .LVU248
 881 0062 08A9     		add	r1, sp, #32
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 32


 882 0064 1B48     		ldr	r0, .L70
 883 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 884              	.LVL31:
 359:Core/Src/main.c ****   {
 885              		.loc 1 359 6 view .LVU249
 886 006a 48BB     		cbnz	r0, .L65
 363:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 887              		.loc 1 363 3 is_stmt 1 view .LVU250
 363:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 888              		.loc 1 363 20 is_stmt 0 view .LVU251
 889 006c 6023     		movs	r3, #96
 890 006e 0193     		str	r3, [sp, #4]
 364:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 891              		.loc 1 364 3 is_stmt 1 view .LVU252
 364:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 892              		.loc 1 364 19 is_stmt 0 view .LVU253
 893 0070 0022     		movs	r2, #0
 894 0072 0292     		str	r2, [sp, #8]
 365:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 895              		.loc 1 365 3 is_stmt 1 view .LVU254
 365:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 896              		.loc 1 365 24 is_stmt 0 view .LVU255
 897 0074 0392     		str	r2, [sp, #12]
 366:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 898              		.loc 1 366 3 is_stmt 1 view .LVU256
 366:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 899              		.loc 1 366 24 is_stmt 0 view .LVU257
 900 0076 0592     		str	r2, [sp, #20]
 367:Core/Src/main.c ****   {
 901              		.loc 1 367 3 is_stmt 1 view .LVU258
 367:Core/Src/main.c ****   {
 902              		.loc 1 367 7 is_stmt 0 view .LVU259
 903 0078 01A9     		add	r1, sp, #4
 904 007a 1648     		ldr	r0, .L70
 905 007c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 906              	.LVL32:
 367:Core/Src/main.c ****   {
 907              		.loc 1 367 6 view .LVU260
 908 0080 00BB     		cbnz	r0, .L66
 371:Core/Src/main.c ****   {
 909              		.loc 1 371 3 is_stmt 1 view .LVU261
 371:Core/Src/main.c ****   {
 910              		.loc 1 371 7 is_stmt 0 view .LVU262
 911 0082 0422     		movs	r2, #4
 912 0084 0DEB0201 		add	r1, sp, r2
 913 0088 1248     		ldr	r0, .L70
 914 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 915              	.LVL33:
 371:Core/Src/main.c ****   {
 916              		.loc 1 371 6 view .LVU263
 917 008e D8B9     		cbnz	r0, .L67
 375:Core/Src/main.c ****   {
 918              		.loc 1 375 3 is_stmt 1 view .LVU264
 375:Core/Src/main.c ****   {
 919              		.loc 1 375 7 is_stmt 0 view .LVU265
 920 0090 0822     		movs	r2, #8
 921 0092 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 33


 922 0094 0F48     		ldr	r0, .L70
 923 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 924              	.LVL34:
 375:Core/Src/main.c ****   {
 925              		.loc 1 375 6 view .LVU266
 926 009a B8B9     		cbnz	r0, .L68
 379:Core/Src/main.c ****   {
 927              		.loc 1 379 3 is_stmt 1 view .LVU267
 379:Core/Src/main.c ****   {
 928              		.loc 1 379 7 is_stmt 0 view .LVU268
 929 009c 0C22     		movs	r2, #12
 930 009e 01A9     		add	r1, sp, #4
 931 00a0 0C48     		ldr	r0, .L70
 932 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 933              	.LVL35:
 379:Core/Src/main.c ****   {
 934              		.loc 1 379 6 view .LVU269
 935 00a6 98B9     		cbnz	r0, .L69
 386:Core/Src/main.c **** 
 936              		.loc 1 386 3 is_stmt 1 view .LVU270
 937 00a8 0A48     		ldr	r0, .L70
 938 00aa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 939              	.LVL36:
 388:Core/Src/main.c **** 
 940              		.loc 1 388 1 is_stmt 0 view .LVU271
 941 00ae 0FB0     		add	sp, sp, #60
 942              	.LCFI21:
 943              		.cfi_remember_state
 944              		.cfi_def_cfa_offset 4
 945              		@ sp needed
 946 00b0 5DF804FB 		ldr	pc, [sp], #4
 947              	.L62:
 948              	.LCFI22:
 949              		.cfi_restore_state
 346:Core/Src/main.c ****   }
 950              		.loc 1 346 5 is_stmt 1 view .LVU272
 951 00b4 FFF7FEFF 		bl	Error_Handler
 952              	.LVL37:
 953              	.L63:
 351:Core/Src/main.c ****   }
 954              		.loc 1 351 5 view .LVU273
 955 00b8 FFF7FEFF 		bl	Error_Handler
 956              	.LVL38:
 957              	.L64:
 355:Core/Src/main.c ****   }
 958              		.loc 1 355 5 view .LVU274
 959 00bc FFF7FEFF 		bl	Error_Handler
 960              	.LVL39:
 961              	.L65:
 361:Core/Src/main.c ****   }
 962              		.loc 1 361 5 view .LVU275
 963 00c0 FFF7FEFF 		bl	Error_Handler
 964              	.LVL40:
 965              	.L66:
 369:Core/Src/main.c ****   }
 966              		.loc 1 369 5 view .LVU276
 967 00c4 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 34


 968              	.LVL41:
 969              	.L67:
 373:Core/Src/main.c ****   }
 970              		.loc 1 373 5 view .LVU277
 971 00c8 FFF7FEFF 		bl	Error_Handler
 972              	.LVL42:
 973              	.L68:
 377:Core/Src/main.c ****   }
 974              		.loc 1 377 5 view .LVU278
 975 00cc FFF7FEFF 		bl	Error_Handler
 976              	.LVL43:
 977              	.L69:
 381:Core/Src/main.c ****   }
 978              		.loc 1 381 5 view .LVU279
 979 00d0 FFF7FEFF 		bl	Error_Handler
 980              	.LVL44:
 981              	.L71:
 982              		.align	2
 983              	.L70:
 984 00d4 00000000 		.word	.LANCHOR6
 985 00d8 000C0040 		.word	1073744896
 986              		.cfi_endproc
 987              	.LFE245:
 989              		.section	.text.MX_UART5_Init,"ax",%progbits
 990              		.align	1
 991              		.syntax unified
 992              		.thumb
 993              		.thumb_func
 995              	MX_UART5_Init:
 996              	.LFB246:
 396:Core/Src/main.c **** 
 997              		.loc 1 396 1 view -0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001 0000 08B5     		push	{r3, lr}
 1002              	.LCFI23:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 3, -8
 1005              		.cfi_offset 14, -4
 405:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 1006              		.loc 1 405 3 view .LVU281
 405:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 1007              		.loc 1 405 19 is_stmt 0 view .LVU282
 1008 0002 0A48     		ldr	r0, .L76
 1009 0004 0A4B     		ldr	r3, .L76+4
 1010 0006 0360     		str	r3, [r0]
 406:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 1011              		.loc 1 406 3 is_stmt 1 view .LVU283
 406:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 1012              		.loc 1 406 24 is_stmt 0 view .LVU284
 1013 0008 4FF4E133 		mov	r3, #115200
 1014 000c 4360     		str	r3, [r0, #4]
 407:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 1015              		.loc 1 407 3 is_stmt 1 view .LVU285
 407:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 1016              		.loc 1 407 26 is_stmt 0 view .LVU286
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 35


 1017 000e 0023     		movs	r3, #0
 1018 0010 8360     		str	r3, [r0, #8]
 408:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 1019              		.loc 1 408 3 is_stmt 1 view .LVU287
 408:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 1020              		.loc 1 408 24 is_stmt 0 view .LVU288
 1021 0012 C360     		str	r3, [r0, #12]
 409:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 1022              		.loc 1 409 3 is_stmt 1 view .LVU289
 409:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 1023              		.loc 1 409 22 is_stmt 0 view .LVU290
 1024 0014 0361     		str	r3, [r0, #16]
 410:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1025              		.loc 1 410 3 is_stmt 1 view .LVU291
 410:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1026              		.loc 1 410 20 is_stmt 0 view .LVU292
 1027 0016 0C22     		movs	r2, #12
 1028 0018 4261     		str	r2, [r0, #20]
 411:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 1029              		.loc 1 411 3 is_stmt 1 view .LVU293
 411:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 1030              		.loc 1 411 25 is_stmt 0 view .LVU294
 1031 001a 8361     		str	r3, [r0, #24]
 412:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 1032              		.loc 1 412 3 is_stmt 1 view .LVU295
 412:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 1033              		.loc 1 412 28 is_stmt 0 view .LVU296
 1034 001c C361     		str	r3, [r0, #28]
 413:Core/Src/main.c ****   {
 1035              		.loc 1 413 3 is_stmt 1 view .LVU297
 413:Core/Src/main.c ****   {
 1036              		.loc 1 413 7 is_stmt 0 view .LVU298
 1037 001e FFF7FEFF 		bl	HAL_UART_Init
 1038              	.LVL45:
 413:Core/Src/main.c ****   {
 1039              		.loc 1 413 6 view .LVU299
 1040 0022 00B9     		cbnz	r0, .L75
 421:Core/Src/main.c **** 
 1041              		.loc 1 421 1 view .LVU300
 1042 0024 08BD     		pop	{r3, pc}
 1043              	.L75:
 415:Core/Src/main.c ****   }
 1044              		.loc 1 415 5 is_stmt 1 view .LVU301
 1045 0026 FFF7FEFF 		bl	Error_Handler
 1046              	.LVL46:
 1047              	.L77:
 1048 002a 00BF     		.align	2
 1049              	.L76:
 1050 002c 00000000 		.word	.LANCHOR7
 1051 0030 00500040 		.word	1073762304
 1052              		.cfi_endproc
 1053              	.LFE246:
 1055              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 36


 1061              	MX_USART3_UART_Init:
 1062              	.LFB248:
 462:Core/Src/main.c **** 
 1063              		.loc 1 462 1 view -0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067 0000 08B5     		push	{r3, lr}
 1068              	.LCFI24:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 3, -8
 1071              		.cfi_offset 14, -4
 471:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1072              		.loc 1 471 3 view .LVU303
 471:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1073              		.loc 1 471 19 is_stmt 0 view .LVU304
 1074 0002 0A48     		ldr	r0, .L82
 1075 0004 0A4B     		ldr	r3, .L82+4
 1076 0006 0360     		str	r3, [r0]
 472:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1077              		.loc 1 472 3 is_stmt 1 view .LVU305
 472:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1078              		.loc 1 472 24 is_stmt 0 view .LVU306
 1079 0008 4FF4E133 		mov	r3, #115200
 1080 000c 4360     		str	r3, [r0, #4]
 473:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1081              		.loc 1 473 3 is_stmt 1 view .LVU307
 473:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1082              		.loc 1 473 26 is_stmt 0 view .LVU308
 1083 000e 0023     		movs	r3, #0
 1084 0010 8360     		str	r3, [r0, #8]
 474:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1085              		.loc 1 474 3 is_stmt 1 view .LVU309
 474:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1086              		.loc 1 474 24 is_stmt 0 view .LVU310
 1087 0012 C360     		str	r3, [r0, #12]
 475:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1088              		.loc 1 475 3 is_stmt 1 view .LVU311
 475:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1089              		.loc 1 475 22 is_stmt 0 view .LVU312
 1090 0014 0361     		str	r3, [r0, #16]
 476:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1091              		.loc 1 476 3 is_stmt 1 view .LVU313
 476:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1092              		.loc 1 476 20 is_stmt 0 view .LVU314
 1093 0016 0C22     		movs	r2, #12
 1094 0018 4261     		str	r2, [r0, #20]
 477:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1095              		.loc 1 477 3 is_stmt 1 view .LVU315
 477:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1096              		.loc 1 477 25 is_stmt 0 view .LVU316
 1097 001a 8361     		str	r3, [r0, #24]
 478:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1098              		.loc 1 478 3 is_stmt 1 view .LVU317
 478:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1099              		.loc 1 478 28 is_stmt 0 view .LVU318
 1100 001c C361     		str	r3, [r0, #28]
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 37


 479:Core/Src/main.c ****   {
 1101              		.loc 1 479 3 is_stmt 1 view .LVU319
 479:Core/Src/main.c ****   {
 1102              		.loc 1 479 7 is_stmt 0 view .LVU320
 1103 001e FFF7FEFF 		bl	HAL_UART_Init
 1104              	.LVL47:
 479:Core/Src/main.c ****   {
 1105              		.loc 1 479 6 view .LVU321
 1106 0022 00B9     		cbnz	r0, .L81
 487:Core/Src/main.c **** 
 1107              		.loc 1 487 1 view .LVU322
 1108 0024 08BD     		pop	{r3, pc}
 1109              	.L81:
 481:Core/Src/main.c ****   }
 1110              		.loc 1 481 5 is_stmt 1 view .LVU323
 1111 0026 FFF7FEFF 		bl	Error_Handler
 1112              	.LVL48:
 1113              	.L83:
 1114 002a 00BF     		.align	2
 1115              	.L82:
 1116 002c 00000000 		.word	.LANCHOR8
 1117 0030 00480040 		.word	1073760256
 1118              		.cfi_endproc
 1119              	.LFE248:
 1121              		.section	.text.SystemClock_Config,"ax",%progbits
 1122              		.align	1
 1123              		.global	SystemClock_Config
 1124              		.syntax unified
 1125              		.thumb
 1126              		.thumb_func
 1128              	SystemClock_Config:
 1129              	.LFB241:
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1130              		.loc 1 163 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 80
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134 0000 00B5     		push	{lr}
 1135              	.LCFI25:
 1136              		.cfi_def_cfa_offset 4
 1137              		.cfi_offset 14, -4
 1138 0002 95B0     		sub	sp, sp, #84
 1139              	.LCFI26:
 1140              		.cfi_def_cfa_offset 88
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1141              		.loc 1 164 3 view .LVU325
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1142              		.loc 1 164 22 is_stmt 0 view .LVU326
 1143 0004 3022     		movs	r2, #48
 1144 0006 0021     		movs	r1, #0
 1145 0008 08A8     		add	r0, sp, #32
 1146 000a FFF7FEFF 		bl	memset
 1147              	.LVL49:
 165:Core/Src/main.c **** 
 1148              		.loc 1 165 3 is_stmt 1 view .LVU327
 165:Core/Src/main.c **** 
 1149              		.loc 1 165 22 is_stmt 0 view .LVU328
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 38


 1150 000e 0023     		movs	r3, #0
 1151 0010 0393     		str	r3, [sp, #12]
 1152 0012 0493     		str	r3, [sp, #16]
 1153 0014 0593     		str	r3, [sp, #20]
 1154 0016 0693     		str	r3, [sp, #24]
 1155 0018 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1156              		.loc 1 169 3 is_stmt 1 view .LVU329
 1157              	.LBB12:
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1158              		.loc 1 169 3 view .LVU330
 1159 001a 0193     		str	r3, [sp, #4]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1160              		.loc 1 169 3 view .LVU331
 1161 001c 204A     		ldr	r2, .L90
 1162 001e 116C     		ldr	r1, [r2, #64]
 1163 0020 41F08051 		orr	r1, r1, #268435456
 1164 0024 1164     		str	r1, [r2, #64]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1165              		.loc 1 169 3 view .LVU332
 1166 0026 126C     		ldr	r2, [r2, #64]
 1167 0028 02F08052 		and	r2, r2, #268435456
 1168 002c 0192     		str	r2, [sp, #4]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1169              		.loc 1 169 3 view .LVU333
 1170 002e 019A     		ldr	r2, [sp, #4]
 1171              	.LBE12:
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1172              		.loc 1 169 3 view .LVU334
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1173              		.loc 1 170 3 view .LVU335
 1174              	.LBB13:
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1175              		.loc 1 170 3 view .LVU336
 1176 0030 0293     		str	r3, [sp, #8]
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1177              		.loc 1 170 3 view .LVU337
 1178 0032 1C4B     		ldr	r3, .L90+4
 1179 0034 1A68     		ldr	r2, [r3]
 1180 0036 42F48042 		orr	r2, r2, #16384
 1181 003a 1A60     		str	r2, [r3]
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1182              		.loc 1 170 3 view .LVU338
 1183 003c 1B68     		ldr	r3, [r3]
 1184 003e 03F48043 		and	r3, r3, #16384
 1185 0042 0293     		str	r3, [sp, #8]
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1186              		.loc 1 170 3 view .LVU339
 1187 0044 029B     		ldr	r3, [sp, #8]
 1188              	.LBE13:
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1189              		.loc 1 170 3 view .LVU340
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1190              		.loc 1 174 3 view .LVU341
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1191              		.loc 1 174 36 is_stmt 0 view .LVU342
 1192 0046 0123     		movs	r3, #1
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 39


 1193 0048 0893     		str	r3, [sp, #32]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1194              		.loc 1 175 3 is_stmt 1 view .LVU343
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1195              		.loc 1 175 30 is_stmt 0 view .LVU344
 1196 004a 4FF48033 		mov	r3, #65536
 1197 004e 0993     		str	r3, [sp, #36]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1198              		.loc 1 176 3 is_stmt 1 view .LVU345
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1199              		.loc 1 176 34 is_stmt 0 view .LVU346
 1200 0050 0222     		movs	r2, #2
 1201 0052 0E92     		str	r2, [sp, #56]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1202              		.loc 1 177 3 is_stmt 1 view .LVU347
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1203              		.loc 1 177 35 is_stmt 0 view .LVU348
 1204 0054 4FF48003 		mov	r3, #4194304
 1205 0058 0F93     		str	r3, [sp, #60]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 1206              		.loc 1 178 3 is_stmt 1 view .LVU349
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 128;
 1207              		.loc 1 178 30 is_stmt 0 view .LVU350
 1208 005a 0423     		movs	r3, #4
 1209 005c 1093     		str	r3, [sp, #64]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1210              		.loc 1 179 3 is_stmt 1 view .LVU351
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1211              		.loc 1 179 30 is_stmt 0 view .LVU352
 1212 005e 8021     		movs	r1, #128
 1213 0060 1191     		str	r1, [sp, #68]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1214              		.loc 1 180 3 is_stmt 1 view .LVU353
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1215              		.loc 1 180 30 is_stmt 0 view .LVU354
 1216 0062 1292     		str	r2, [sp, #72]
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1217              		.loc 1 181 3 is_stmt 1 view .LVU355
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1218              		.loc 1 181 30 is_stmt 0 view .LVU356
 1219 0064 1393     		str	r3, [sp, #76]
 182:Core/Src/main.c ****   {
 1220              		.loc 1 182 3 is_stmt 1 view .LVU357
 182:Core/Src/main.c ****   {
 1221              		.loc 1 182 7 is_stmt 0 view .LVU358
 1222 0066 08A8     		add	r0, sp, #32
 1223 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1224              	.LVL50:
 182:Core/Src/main.c ****   {
 1225              		.loc 1 182 6 view .LVU359
 1226 006c 98B9     		cbnz	r0, .L88
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1227              		.loc 1 188 3 is_stmt 1 view .LVU360
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1228              		.loc 1 188 31 is_stmt 0 view .LVU361
 1229 006e 0F23     		movs	r3, #15
 1230 0070 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 40


 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1231              		.loc 1 190 3 is_stmt 1 view .LVU362
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1232              		.loc 1 190 34 is_stmt 0 view .LVU363
 1233 0072 0223     		movs	r3, #2
 1234 0074 0493     		str	r3, [sp, #16]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1235              		.loc 1 191 3 is_stmt 1 view .LVU364
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1236              		.loc 1 191 35 is_stmt 0 view .LVU365
 1237 0076 0023     		movs	r3, #0
 1238 0078 0593     		str	r3, [sp, #20]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1239              		.loc 1 192 3 is_stmt 1 view .LVU366
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1240              		.loc 1 192 36 is_stmt 0 view .LVU367
 1241 007a 4FF4A053 		mov	r3, #5120
 1242 007e 0693     		str	r3, [sp, #24]
 193:Core/Src/main.c **** 
 1243              		.loc 1 193 3 is_stmt 1 view .LVU368
 193:Core/Src/main.c **** 
 1244              		.loc 1 193 36 is_stmt 0 view .LVU369
 1245 0080 4FF48053 		mov	r3, #4096
 1246 0084 0793     		str	r3, [sp, #28]
 195:Core/Src/main.c ****   {
 1247              		.loc 1 195 3 is_stmt 1 view .LVU370
 195:Core/Src/main.c ****   {
 1248              		.loc 1 195 7 is_stmt 0 view .LVU371
 1249 0086 0421     		movs	r1, #4
 1250 0088 03A8     		add	r0, sp, #12
 1251 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1252              	.LVL51:
 195:Core/Src/main.c ****   {
 1253              		.loc 1 195 6 view .LVU372
 1254 008e 20B9     		cbnz	r0, .L89
 199:Core/Src/main.c **** 
 1255              		.loc 1 199 1 view .LVU373
 1256 0090 15B0     		add	sp, sp, #84
 1257              	.LCFI27:
 1258              		.cfi_remember_state
 1259              		.cfi_def_cfa_offset 4
 1260              		@ sp needed
 1261 0092 5DF804FB 		ldr	pc, [sp], #4
 1262              	.L88:
 1263              	.LCFI28:
 1264              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 1265              		.loc 1 184 5 is_stmt 1 view .LVU374
 1266 0096 FFF7FEFF 		bl	Error_Handler
 1267              	.LVL52:
 1268              	.L89:
 197:Core/Src/main.c ****   }
 1269              		.loc 1 197 5 view .LVU375
 1270 009a FFF7FEFF 		bl	Error_Handler
 1271              	.LVL53:
 1272              	.L91:
 1273 009e 00BF     		.align	2
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 41


 1274              	.L90:
 1275 00a0 00380240 		.word	1073887232
 1276 00a4 00700040 		.word	1073770496
 1277              		.cfi_endproc
 1278              	.LFE241:
 1280              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1281              		.align	2
 1282              	.LC0:
 1283 0000 44656661 		.ascii	"Default\000"
 1283      756C7400 
 1284              		.section	.text.main,"ax",%progbits
 1285              		.align	1
 1286              		.global	main
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1291              	main:
 1292              	.LFB240:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1293              		.loc 1 108 1 view -0
 1294              		.cfi_startproc
 1295              		@ Volatile: function does not return.
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298 0000 00B5     		push	{lr}
 1299              	.LCFI29:
 1300              		.cfi_def_cfa_offset 4
 1301              		.cfi_offset 14, -4
 1302 0002 83B0     		sub	sp, sp, #12
 1303              	.LCFI30:
 1304              		.cfi_def_cfa_offset 16
 116:Core/Src/main.c **** 
 1305              		.loc 1 116 3 view .LVU377
 1306 0004 FFF7FEFF 		bl	HAL_Init
 1307              	.LVL54:
 123:Core/Src/main.c **** 
 1308              		.loc 1 123 3 view .LVU378
 1309 0008 FFF7FEFF 		bl	SystemClock_Config
 1310              	.LVL55:
 130:Core/Src/main.c ****   MX_USART1_UART_Init();
 1311              		.loc 1 130 3 view .LVU379
 1312 000c FFF7FEFF 		bl	MX_GPIO_Init
 1313              	.LVL56:
 131:Core/Src/main.c ****   MX_DMA_Init();
 1314              		.loc 1 131 3 view .LVU380
 1315 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1316              	.LVL57:
 132:Core/Src/main.c ****   MX_ADC1_Init();
 1317              		.loc 1 132 3 view .LVU381
 1318 0014 FFF7FEFF 		bl	MX_DMA_Init
 1319              	.LVL58:
 133:Core/Src/main.c ****   MX_I2C1_Init();
 1320              		.loc 1 133 3 view .LVU382
 1321 0018 FFF7FEFF 		bl	MX_ADC1_Init
 1322              	.LVL59:
 134:Core/Src/main.c ****   MX_I2C2_Init();
 1323              		.loc 1 134 3 view .LVU383
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 42


 1324 001c FFF7FEFF 		bl	MX_I2C1_Init
 1325              	.LVL60:
 135:Core/Src/main.c ****   MX_TIM5_Init();
 1326              		.loc 1 135 3 view .LVU384
 1327 0020 FFF7FEFF 		bl	MX_I2C2_Init
 1328              	.LVL61:
 136:Core/Src/main.c ****   MX_UART5_Init();
 1329              		.loc 1 136 3 view .LVU385
 1330 0024 FFF7FEFF 		bl	MX_TIM5_Init
 1331              	.LVL62:
 137:Core/Src/main.c ****   MX_USART3_UART_Init();
 1332              		.loc 1 137 3 view .LVU386
 1333 0028 FFF7FEFF 		bl	MX_UART5_Init
 1334              	.LVL63:
 138:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1335              		.loc 1 138 3 view .LVU387
 1336 002c FFF7FEFF 		bl	MX_USART3_UART_Init
 1337              	.LVL64:
 140:Core/Src/main.c **** 
 1338              		.loc 1 140 3 view .LVU388
 1339 0030 064B     		ldr	r3, .L95
 1340 0032 0193     		str	r3, [sp, #4]
 1341 0034 0123     		movs	r3, #1
 1342 0036 0093     		str	r3, [sp]
 1343 0038 0023     		movs	r3, #0
 1344 003a 4FF48072 		mov	r2, #256
 1345 003e 0449     		ldr	r1, .L95+4
 1346 0040 0448     		ldr	r0, .L95+8
 1347 0042 FFF7FEFF 		bl	xTaskCreate
 1348              	.LVL65:
 143:Core/Src/main.c ****   /* USER CODE END 2 */
 1349              		.loc 1 143 3 view .LVU389
 1350 0046 FFF7FEFF 		bl	vTaskStartScheduler
 1351              	.LVL66:
 1352              	.L93:
 149:Core/Src/main.c ****   {
 1353              		.loc 1 149 3 discriminator 1 view .LVU390
 154:Core/Src/main.c ****   /* USER CODE END 3 */
 1354              		.loc 1 154 3 discriminator 1 view .LVU391
 149:Core/Src/main.c ****   {
 1355              		.loc 1 149 9 discriminator 1 view .LVU392
 1356 004a FEE7     		b	.L93
 1357              	.L96:
 1358              		.align	2
 1359              	.L95:
 1360 004c 00000000 		.word	.LANCHOR9
 1361 0050 00000000 		.word	.LC0
 1362 0054 00000000 		.word	Default_task
 1363              		.cfi_endproc
 1364              	.LFE240:
 1366              		.global	sensors
 1367              		.global	DefaultTask
 1368              		.global	count
 1369              		.global	huart3
 1370              		.global	huart1
 1371              		.global	huart5
 1372              		.global	htim5
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 43


 1373              		.global	hi2c2
 1374              		.global	hi2c1
 1375              		.global	hdma_adc1
 1376              		.global	hadc1
 1377              		.section	.bss.DefaultTask,"aw",%nobits
 1378              		.align	2
 1379              		.set	.LANCHOR9,. + 0
 1382              	DefaultTask:
 1383 0000 00000000 		.space	4
 1384              		.section	.bss.count,"aw",%nobits
 1387              	count:
 1388 0000 00       		.space	1
 1389              		.section	.bss.hadc1,"aw",%nobits
 1390              		.align	2
 1391              		.set	.LANCHOR4,. + 0
 1394              	hadc1:
 1395 0000 00000000 		.space	72
 1395      00000000 
 1395      00000000 
 1395      00000000 
 1395      00000000 
 1396              		.section	.bss.hdma_adc1,"aw",%nobits
 1397              		.align	2
 1400              	hdma_adc1:
 1401 0000 00000000 		.space	96
 1401      00000000 
 1401      00000000 
 1401      00000000 
 1401      00000000 
 1402              		.section	.bss.hi2c1,"aw",%nobits
 1403              		.align	2
 1404              		.set	.LANCHOR1,. + 0
 1407              	hi2c1:
 1408 0000 00000000 		.space	84
 1408      00000000 
 1408      00000000 
 1408      00000000 
 1408      00000000 
 1409              		.section	.bss.hi2c2,"aw",%nobits
 1410              		.align	2
 1411              		.set	.LANCHOR5,. + 0
 1414              	hi2c2:
 1415 0000 00000000 		.space	84
 1415      00000000 
 1415      00000000 
 1415      00000000 
 1415      00000000 
 1416              		.section	.bss.htim5,"aw",%nobits
 1417              		.align	2
 1418              		.set	.LANCHOR6,. + 0
 1421              	htim5:
 1422 0000 00000000 		.space	72
 1422      00000000 
 1422      00000000 
 1422      00000000 
 1422      00000000 
 1423              		.section	.bss.huart1,"aw",%nobits
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 44


 1424              		.align	2
 1425              		.set	.LANCHOR3,. + 0
 1428              	huart1:
 1429 0000 00000000 		.space	68
 1429      00000000 
 1429      00000000 
 1429      00000000 
 1429      00000000 
 1430              		.section	.bss.huart3,"aw",%nobits
 1431              		.align	2
 1432              		.set	.LANCHOR8,. + 0
 1435              	huart3:
 1436 0000 00000000 		.space	68
 1436      00000000 
 1436      00000000 
 1436      00000000 
 1436      00000000 
 1437              		.section	.bss.huart5,"aw",%nobits
 1438              		.align	2
 1439              		.set	.LANCHOR7,. + 0
 1442              	huart5:
 1443 0000 00000000 		.space	68
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1443      00000000 
 1444              		.section	.bss.sensors,"aw",%nobits
 1445              		.align	2
 1446              		.set	.LANCHOR0,. + 0
 1449              	sensors:
 1450 0000 00000000 		.space	136
 1450      00000000 
 1450      00000000 
 1450      00000000 
 1450      00000000 
 1451              		.section	.bss.status.0,"aw",%nobits
 1452              		.set	.LANCHOR2,. + 0
 1455              	status.0:
 1456 0000 00       		.space	1
 1457              		.text
 1458              	.Letext0:
 1459              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1460              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1461              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1462              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1463              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1464              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1465              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1466              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1467              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1468              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1469              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1470              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1471              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1472              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1473              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1474              		.file 18 "Drivers/MPU6050/Inc/ST_MPU6050.h"
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 45


 1475              		.file 19 "Drivers/HMC5883/Inc/HMC5883.h"
 1476              		.file 20 "Drivers/Sensors/sensors.h"
 1477              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1478              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1479              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1480              		.file 24 "Core/Inc/main.h"
 1481              		.file 25 "<built-in>"
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:180    .text.MX_GPIO_Init:000000ac $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:186    .text.MX_DMA_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:191    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:240    .text.MX_DMA_Init:00000030 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:245    .text.Default_task:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:251    .text.Default_task:00000000 Default_task
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:322    .text.Default_task:00000050 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:330    .text.__io_putchar:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:336    .text.__io_putchar:00000000 __io_putchar
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:372    .text.__io_putchar:0000001c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:377    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:383    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:417    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:422    .text.Error_Handler:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:428    .text.Error_Handler:00000000 Error_Handler
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:460    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:465    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:520    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:526    .text.MX_ADC1_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:531    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:637    .text.MX_ADC1_Init:0000005c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:644    .text.MX_I2C1_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:649    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:707    .text.MX_I2C1_Init:0000002c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:714    .text.MX_I2C2_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:719    .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:777    .text.MX_I2C2_Init:0000002c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:784    .text.MX_TIM5_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:789    .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:984    .text.MX_TIM5_Init:000000d4 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:990    .text.MX_UART5_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:995    .text.MX_UART5_Init:00000000 MX_UART5_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1050   .text.MX_UART5_Init:0000002c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1056   .text.MX_USART3_UART_Init:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1061   .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1116   .text.MX_USART3_UART_Init:0000002c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1122   .text.SystemClock_Config:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1128   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1275   .text.SystemClock_Config:000000a0 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1281   .rodata.main.str1.4:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1285   .text.main:00000000 $t
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1291   .text.main:00000000 main
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1360   .text.main:0000004c $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1449   .bss.sensors:00000000 sensors
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1382   .bss.DefaultTask:00000000 DefaultTask
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1387   .bss.count:00000000 count
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1435   .bss.huart3:00000000 huart3
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1428   .bss.huart1:00000000 huart1
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1442   .bss.huart5:00000000 huart5
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1421   .bss.htim5:00000000 htim5
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1414   .bss.hi2c2:00000000 hi2c2
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1407   .bss.hi2c1:00000000 hi2c1
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1400   .bss.hdma_adc1:00000000 hdma_adc1
ARM GAS  C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s 			page 47


C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1394   .bss.hadc1:00000000 hadc1
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1378   .bss.DefaultTask:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1388   .bss.count:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1390   .bss.hadc1:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1397   .bss.hdma_adc1:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1403   .bss.hi2c1:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1410   .bss.hi2c2:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1417   .bss.htim5:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1424   .bss.huart1:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1431   .bss.huart3:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1438   .bss.huart5:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1445   .bss.sensors:00000000 $d
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1455   .bss.status.0:00000000 status.0
C:\Users\sangt\AppData\Local\Temp\ccRTV3aw.s:1456   .bss.status.0:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
xTaskGetTickCount
HAL_GPIO_TogglePin
HAL_I2C_Mem_Read
vTaskDelayUntil
HAL_UART_Transmit
HAL_IncTick
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
xTaskCreate
vTaskStartScheduler
